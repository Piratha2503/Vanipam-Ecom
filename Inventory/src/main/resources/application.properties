spring.application.name=Inventory

server.port = 9503
spring.datasource.url=jdbc:postgresql://localhost:5432/ecommerce_inventory
spring.datasource.username=postgres
spring.datasource.password=root
server.servlet.context-path=/ecom_app

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=update

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

spring.servlet.multipart.max-request-size=150MB
spring.servlet.multipart.max-file-size=500MB

eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.register-with-eureka=true
eureka.client.fetch=true
eureka.instance.prefer-ip-address=true


# ====== Kafka Configuration ======

# Broker & Producer
spring.kafka.bootstrap-servers=88.222.215.70:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

### Consumer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer


#server.ssl.key-store=/etc/letsencrypt/live/backend.graycorp.io/keystore.p12
#server.ssl.key-store-password=Password
#server.ssl.key-store-type=PKCS12
#server.ssl.key-alias=myalias
